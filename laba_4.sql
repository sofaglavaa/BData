USE laba_3_sql_sport;
-- ИСПРАВЬ ЗАПРОСЫ С АЙДИШНИками и ДЖОИНАМИ
-- 15 функциональных требований.

-- 1. Показать список сотрудников.
SELECT * FROM laba_3_sql_sport.сотрудник;
-- 2. Показать ФИО сотрудника.
SELECT `ФИО`
FROM laba_3_sql_sport.сотрудник;
-- 3. Изменить цвет товара.
UPDATE товар
SET цвет = 'Красный'
WHERE товар.id = 6;
-- 4. Показать название товара 
SELECT название
FROM товар
WHERE форма = "Шорты";
-- 5. Посчитать количество заказов за месяц
SELECT count(*) FROM заказ;
-- 6. Отобразить должности, чья ЗП располагается в пределах [15000; 30000]
SELECT *from должность
WHERE оклад BETWEEN 15000 AND 30000;
-- 7. Вывести информацию о товаре, название которого "Тейп"
SELECT * FROM товар 
WHERE название = 'Тейп';
-- 8. Добавим новый товар 
INSERT INTO товар
VALUES (12,"Изумрудный","Безформенная","Лизун", 100,1);
-- 9. Изменить параметры поситетеля из-за ошибки оформления
UPDATE посетитель
SET параметры = '100-85-98' 
WHERE id = 3;
-- 10. Удалить "12" товар
DELETE from товар
WHERE id = 12;
-- 11. Изменить возраст посетителя
UPDATE посетитель
SET возраст = 21
WHERE  id = 1;
-- 12. Изменить рост посетителя
UPDATE посетитель
SET рост = 194
WHERE  id = 10;
-- 13. Удалить требование, чей тип футболка
DELETE from требования
WHERE тип = "футболка";
-- 14. Вывести зп сотрудника чья должность работа с документами
SELECT SUM(DISTINCT оклад) as sum FROM должность;
-- 15. Отобразить специалистов с опытом работы 2 года и зп больше, чем 6000
SELECT * FROM сотрудник WHERE `рабочий стаж` = 6;

-- UPDATE. 5 штук
-- 16. Изменить зарплату по должности в связи с большим спросом
UPDATE должность
SET оклад  = 30000
WHERE `название` = "Охранник";
-- 17. Сменить наименование характеристики
UPDATE характеристики 
SET наименование = "Цвет"
WHERE описание = "Зеленый";
-- 18. Изменить процент скидки
UPDATE скидка
SET проценты = 28
WHERE id = 2;
-- 19. Изменить место брака
UPDATE брак
SET место = "Ширинка"
WHERE место = "Правая штанина" ;
-- 20. Изменить название отдела
UPDATE отдел
SET `название` = "Атрибутика"
WHERE `название` = "Обувной";

-- DELETE. 5 штук
-- 21. Удалить сотрудника, стаж работы которого - 10 лет
DELETE from сотрудник
WHERE `рабочий стаж` = 10;
-- 22. Удаление случайно созданной таблицы.
CREATE TABLE `директор`(
	name VARCHAR (100)
);
DELETE FROM `директор`;
-- 23. Удалим новый тип характеристики
INSERT into характеристики VALUES (11, "Размер", "Универсальный");
DELETE FROM характеристики
WHERE `наименование` = "Размер";
-- 24. Удалить краденный товар
DELETE FROM `Краденный товар`
WHERE `Количество вынесенного товара` = 6;
-- 25. Удалить информацию о требованиях 
DELETE from требования
WHERE id = 8;

--  SELECT в разных вариациях. 20 запросов.
-- 26. Показать все скидки
SELECT *from скидка;
-- 27. Показать все должности
SELECT *from должность;
-- 28. Показать весь бракованный товар
SELECT *from `Бракованный товар`;
-- 29. Показать кражу время которой 11:28:15
SELECT *from кража
WHERE время = "11:28:15";
-- 30. Отобразить посетителя, который был в отделе 6
SELECT  *from `Посетитель в отделе`
WHERE`id отдела` = 6;
-- 31. Отобразить посетителя, чей возраст 45 и рост 164
SELECT *from посетитель
WHERE `возраст` = 45 AND `рост`= 164;
-- 32. Отобразить требования где размер 46, а тип футболка
SELECT *from требования
WHERE `Размер` = 46 OR `Тип` = "Футболка";
-- 33. Отобразить отдел с женской одеждой
SELECT *from отдел
WHERE`название` = "Женская одежда";
-- 34. Отобразить все должности, где зарплата 30000
SELECT *FROM должность
WHERE `Оклад` IN (30000, 98798, 876876, 87687);
-- 35. Отобразить возраст посетителей
SELECT DISTINCT возраст FROM посетитель;
-- 36. Уникальные значения з/п
SELECT DISTINCT оклад FROM должность;
-- 37. Отобразить все товары
SELECT COUNT(*) FROM товар;
-- 38. Отобразить всех сотрудников
SELECT COUNT(*) FROM сотрудник;
-- 39. Отобразить ФИО и стаж сотрудника
SELECT  CONCAT (ФИО, " ", `Рабочий стаж`) AS contact_details
FROM сотрудник;
-- 40. Отобразим информацию о краже
SELECT CONCAT (время, " ", дата) AS `information`
FROM кража;
-- 41. Вывести данные характеристик, чьи наименования совпадают
SELECT COUNT(*), Наименование
FROM характеристики
GROUP BY Наименование
order by COUNT(*) desc;
-- 42. Сгруппировать должности по зп (от меньшего к большему)
SELECT id, оклад
FROM должность
order BY оклад desc;
-- 43. Изменим названиея столбцов в таблице "требования"
SELECT ID as primary_key FROM требования;
-- 44. Изменить название "Название" в отделе на "Именование"
SELECT `Название` AS `Именование` FROM отдел;
-- 45. Вывести зарплату в пределах [5000, 1000000]
SELECT *FROM должность
WHERE оклад>15000 AND оклад<40000;


-- LIKE и другие функции работы со строками
-- 46. Отобразить текст жалобы, где было слово "В течение"
SELECT *FROM отдел WHERE `Название` LIKE '%Атрибутика%';
-- 47. Отобразить должность, которое начинается с буквы Р
SELECT * FROM должность WHERE `Обязанности` LIKE 'Р%';
-- 48. Отобразить обязанности, чья должность - "охранник"
SELECT * FROM должность WHERE `Название` LIKE '%охранник';
-- 49. Вывести все характеристики, которые не начинаются с буквы "М"
SELECT `Наименование`
FROM Характеристики
WHERE `Наименование` NOT LIKE 'М%';
-- 50. Вывести все требования, в которых нет цифры "3"
SELECT `Размер`
FROM требования
WHERE `Размер` NOT LIKE '%3%';


-- SELECT INTO, INSERT SELECT
-- 51. Выведем в переменные значения Тип и цвет по нашему значению - "Сапоги"
SELECT `Тип`,`Цвет`  INTO @newcolor, @newtype
FROM Требования
WHERE `Тип` = 'Сапоги'; 
SELECT @newcolor, @newtype;
-- 52. Создадим пустую тестовую таблицу. В переменную созданной таблицы перенесем данные из существующей страницы.
CREATE TABLE `новое значение товара`(
	`Оттенок` VARCHAR (100)
    -- PRIMARY KEY
);
INSERT INTO `новое значение товара` (`Оттенок`)
SELECT `Цвет` FROM `Товар`;
SELECT *from `новое значение товара`;

-- JOIN. 20 запросов
-- 53. INNER JOIN. Выведем сумму
SELECT `Название`, `оклад`, ФИО
FROM `должность`
JOIN `сотрудник`
ON сотрудник.`id должность` = должность.id;
-- 54. INNER JOIN. Выведем название должности и обязанности
SELECT  `Название`, `Обязанности`
FROM  `Должность`
JOIN `Сотрудник`
ON должность.id = сотрудник.`id должность`;
-- 55. Такая же логика: посетителя параметры и его размер с требований
SELECT `параметры`, `размер`
FROM `посетитель`
JOIN `требования`
ON посетитель.id = требования.`id посетителя`;
-- 56. Товар и его наименование - вся информацаия о них
SELECT *
FROM `Товар` 
JOIN `характеристики товара` ON `характеристики товара`.`id товара` = товар.id
JOIN `характеристики` ON характеристики.id = `характеристики товара`.`id характеристики` ; 
-- 57. Выведем сотрудников по посетителям
SELECT  *
FROM сотрудник
JOIN `обслуживание посетителя сотрудником` ON `обслуживание посетителя сотрудником`.`id сотрудника` = сотрудник.id
JOIN посетитель ON `обслуживание посетителя сотрудником`.`id посетителя` = посетитель.id; 
-- 58. Вывести время заказа и ФИО оформившего его сотрудника
SELECT `Время заказа`, `ФИО`
FROM заказ
LEFT JOIN сотрудник
ON заказ.`id сотрудника` = сотрудник.id;
-- 59. В промежутке Дата начала + длительность вывести все товары и размер скидки, в котором они находятся 
SELECT *
FROM скидка
LEFT JOIN товар ON скидка.`id товара` = товар.id
WHERE `Дата начала и окончания` > "2020-03-19" AND `Длительность` = "1";
-- 60. Выведем кол-во краденного товара и его форма
SELECT `Количество вынесенного товара`, `Форма`
FROM `краденный товар`
LEFT JOIN товар
ON `краденный товар`.`id товара` = товар.id;
-- 61. Вывести весь бракованный товар 
SELECT `id товара`, `Вид брака`
FROM `бракованный товар`
JOIN товар ON `бракованный товар`.`id товара` = товар.id
JOIN брак ON `бракованный товар`.`id брака` = брак.id;
-- 62. Вывести все значения
SELECT `товар`.`Название`, `характеристики`.Наименование, `характеристики товара`.Значение
FROM товар 
inner JOIN `характеристики товара` ON товар.id = `характеристики товара`.`id товара`
JOIN `характеристики` on `характеристики`.id = `характеристики товара`.`id характеристики`;
-- 63.  Заполнит левую таблицу пустыми значениями, если они имеются
INSERT INTO `сотрудник` VALUES (11, "Фоменков Сергей Анатольевич",5,6);
SELECT `ФИО`, `Оклад`
FROM `сотрудник` 
RIGHT JOIN `должность`
ON сотрудник.`id должность` = должность.id;
-- 64. Выводит в какое время какой отдел посещали посетители
SELECT `дата и время`, `название`
FROM `посетитель в отделе` 
CROSS JOIN `отдел`
ON `посетитель в отделе`.`id отдела` = отдел.id;
-- 65. "Декартово объединение" таблиц
SELECT *from должность
JOIN сотрудник
JOIN посетитель
JOIN `посетитель в отделе`;


-- 66. Вывести название товара, его стоимость и в каком отделе он находится
SELECT товар.Название, товар.Стоимость, отдел.Название AS Отдел
FROM товар
JOIN отдел ON отдел.id = товар.`id отдела`;


-- 67. Выведем название футболки из двух таблиц
SELECT название
FROM товар
LEFT JOIN `характеристики товара`
ON товар.id=`характеристики товара`.`id товара`
WHERE название = 'Футболка';
-- 68. Отобразим информацию о сотрудниках и их окладах
SELECT *FROM должность
JOIN сотрудник;
-- 69. Выведем по ID все товары и скидку на них
SELECT `название`, `проценты`
FROM товар
JOIN скидка
ON товар.id = скидка.`id товара`;


-- 70. Должность и имя его по ID
SELECT `Название`, `ФИО`
FROM должность
RIGHT JOIN сотрудник
ON должность.id = сотрудник.`id должность`;



-- 71. Декартово объединение
SELECT *
FROM скидка
JOIN посетитель
JOIN товар;
-- 72. Стоблцы используются только 1 раз
SELECT *
FROM кража
JOIN `краденный товар`;
-- 73. То же самое
SELECT *
FROM `брак`
JOIN `бракованный товар`;
-- GROUP BY. 10 штук
-- 74. Выведем количество номеров 
SELECT цвет, COUNT(*) AS "Черный"
FROM товар
GROUP BY цвет;
-- 75. Минимальная зарплата
SELECT название,MIN(оклад) AS "Lowest salary"
FROM должность
GROUP BY название;
-- 76. Максимальная з/п
SELECT обязанности,MAX(оклад) AS "Highest salary"
FROM должность
GROUP BY обязанности;
-- 77. Выбрать количество скидок и длительность
SELECT `проценты`,COUNT(*) `длительность`
FROM `скидка`
GROUP BY `проценты`;
-- 78. Выведем информацию только о 2 сотрудниках
SELECT * 
FROM сотрудник
GROUP BY `ФИО` LIMIT 2;
-- 79. Округление зп для конкретных сотрудников
SELECT Название,AVG(оклад)
FROM должность
GROUP BY Название;
-- 80. Вывести количество зарплат по обязанностям
SELECT Обязанности, COUNT(*)оклад
FROM должность
GROUP BY обязанности;
-- 81.  Вывести названиедолжности и его оклад
SELECT `название`, COUNT(*) AS `оклад`
FROM `должность`
GROUP BY `название`
HAVING COUNT(*) > 0;
-- 82. Выведем все характеристики, ограничив 9 
SELECT * 
FROM характеристики
GROUP BY `Описание` LIMIT 9;
-- 83. Выведем зарплату в порядке убывания, причем работник не должен работать в офисе 2
SELECT SUM(`оклад`) AS 'summary' , `название` AS `name`
FROM `должность`
WHERE название != "Охранник" AND обязанности != 'работа с документами'
GROUP BY название
ORDER BY 1 DESC;
-- 84. Выведем среднюю зарплату по сотрудникам
SELECT Обязанности, `Название`
FROM должность
GROUP BY обязанности;


-- UNION, GROUP_CONCAT
-- 85. Выведем название отдела, объединив таблицы "товар" и "отдел"
SELECT `название`
FROM `товар`
UNION SELECT `название`
FROM `отдел`;
-- 86. Начислим премию за успешную работу сотрудникам , используя коэффициент
SELECT `название`, оклад * 0.5 AS `prize`
FROM `должность`
WHERE оклад <= 30000
UNION SELECT `название`, оклад * 0.25 AS `prize`
FROM `должность` 
WHERE оклад <= 20000;
-- 87. 
SELECT `примерная дата доставки`,`длительность сборки`
FROM `заказ` 
WHERE DATE (`примерная дата доставки`) >= "2019-02-15" AND DATE (`примерная дата доставки`) <="2020-11-09"
UNION SELECT `примерная дата доставки`,`длительность сборки`
FROM `заказ`;
-- 88. Выведем повторяющиеся значения
SELECT `цвет` FROM `товар`
UNION ALL
SELECT `цвет` FROM `требования`;
-- 89.Объединим результаты выборки таблицы. Результаты будут разделены двойным двоеточием
SELECT DISTINCT `форма`as `вид`, 
(select GROUP_CONCAT(`id`SEPARATOR ', ') as `new_id` from `товар` where `форма` = `вид` ) as `new_id`
FROM `товар`;
-- 90. Выборка "обязанности - Название".
SELECT `обязанности`, GROUP_CONCAT(`Название`)
FROM `должность`
GROUP BY `обязанности`;
-- 91. Выведем строки с 3 по 5 (первые 2 строчки пропускаются, затем - выводятся 3 последующие)
SELECT * 
FROM `требования`
LIMIT 2, 3;
-- 92. Пример с "order by"
SELECT * 
FROM `скидка`
ORDER BY `проценты`
LIMIT 5;
-- 93. Выведем данные отделения, начиная со 2 позиции (id)
SELECT * 
FROM брак
WHERE id > 2
LIMIT 1, 3;
-- 94. Специалист - з/п с помошью сложения строк с разделителем в виде "-"
SELECT *,
CONCAT_WS(' - ',  `обязанности`, `оклад`) AS `result`
FROM `должность`;
-- 95. Сложение строк без разделителей
SELECT *,
CONCAT('Информация: ',  `цвет`, `стоимость`) AS `result`
FROM `товар`;
-- 96. Присвоим всем сотрудникам почтовые адреса
SELECT *,
CONCAT(ФИО, ', почта: user@mail.ru') AS contact_details
FROM сотрудник;
-- 97. Посчитаем длину строки
SELECT *, 
LENGTH(тип) as length 
FROM требования;
-- 98.  Выведем все размеры, причем id магазина не должен быть "null"
SELECT * 
FROM `требования`
WHERE `Размер` IS NOT NULL;
-- 99. Подстрока "течение"
SELECT `название`,
MID(11, `Название`) as `text` 
FROM `отдел`;
-- 100. 'В течение дня(с пн по пт)'
SELECT `id`, 
RPAD(`Дата начала и окончания`, 25, '(с пн по пт)') as `text` 
FROM `скидка`;


-- МОДА

-- 1. Вывести топ 5 отделов по кол-ву краж в них. Кол-во и отдел по убыванию
SELECT `Количество вынесенного товара`, отдел.название
FROM `краденный товар`
JOIN товар ON товар.id = `краденный товар`.`id товара`
JOIN отдел ON товар.id = отдел.id
order BY `Количество вынесенного товара` desc
LIMIT 5;



-- 2. Для заданного посетителя по айди вывести для заданного заказа по дате все товары которые входят в заказ и цену умножить на скидку
SELECT посетитель.id, заказ.`Примерная дата доставки`,т.id AS `id tovar`, т.цвет, т.форма, т.название, (т.стоимость*скидка.Проценты)/100 AS salePrice
FROM посетитель
JOIN заказ ON посетитель.id = заказ.`id посетителя`
JOIN `заказанный товар` ON `заказанный товар`.`id заказа` = заказ.id
JOIN товар т ON т.id = `заказанный товар`.`id товара`
JOIN скидка ON скидка.`id товара` = т.id
WHERE посетитель.id = 5 AND заказ.`Примерная дата доставки` = '2021-05-02';


-- 3. За заданный период времени вывести все поля сотрудника, который обслужил больше всего посетителей
SELECT `Дата и время`, сотрудник.ФИО, сотрудник.`Рабочий стаж`, count(ops.`id посетителя`) AS qty
FROM `обслуживание посетителя сотрудником` ops
JOIN сотрудник ON сотрудник.id = ops.`id сотрудника`
WHERE `Дата и время` >= '2020-02-11 19:12:57'
GROUP BY сотрудник.id
ORDER BY qty desc;
